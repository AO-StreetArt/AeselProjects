buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'net.ltgt.errorprone' version '0.0.11'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'

group = 'com.ao'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
	springBootAdminVersion = '2.0.2'
	springCloudVersion = 'Finchley.SR1'
}

checkstyle {
	toolVersion = "8.2"
}

jar {
	baseName = 'kelona'
	version =  '0.0.1'
}

configurations {
	all*.exclude module : 'spring-boot-starter-logging'
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.boot:spring-boot-starter-log4j2')
  compile('org.springframework.cloud:spring-cloud-starter-consul-discovery')
	compile('org.springframework.cloud:spring-cloud-starter-consul-config')
  compile('com.fasterxml.jackson.core:jackson-databind')
	compile('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml')
	compile('com.fasterxml.jackson.core:jackson-annotations')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	compileOnly('org.projectlombok:lombok')
  compile('org.springframework.retry:spring-retry')
  compile('org.springframework.boot:spring-boot-starter-aop:2.0.5.RELEASE')
  compile('org.springframework.cloud:spring-cloud-starter-vault-config')
  compile('org.springframework.cloud:spring-cloud-vault-config-consul')
  compile('org.springframework.security:spring-security-web:5.1.0.RELEASE')
  compile('org.springframework.security:spring-security-config:5.1.0.RELEASE')
  compile('org.springframework.security:spring-security-core:5.1.0.RELEASE')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
		options.compilerArgs += [ '-Xep:ParameterName:OFF' ]
}
